# 坤舆编程语言 - 简单计算器示例
# 演示函数、条件语句和循环的使用

# 常量定义
常量 版本号 = "1.0";

# 计算器函数
函数 加法(a, b) {
    返回 a + b;
}

函数 减法(a, b) {
    返回 a - b;
}

函数 乘法(a, b) {
    返回 a * b;
}

函数 除法(a, b) {
    如果 (b == 0) {
        输出 "错误：除数不能为零！";
        返回 0;
    }
    返回 a / b;
}

函数 求余(a, b) {
    如果 (b == 0) {
        输出 "错误：除数不能为零！";
        返回 0;
    }
    返回 a % b;
}

函数 计算(a, 运算符, b) {
    如果 (运算符 == "+") {
        返回 加法(a, b);
    } 否则 如果 (运算符 == "-") {
        返回 减法(a, b);
    } 否则 如果 (运算符 == "*") {
        返回 乘法(a, b);
    } 否则 如果 (运算符 == "/") {
        返回 除法(a, b);
    } 否则 如果 (运算符 == "%") {
        返回 求余(a, b);
    } 否则 {
        输出 "不支持的运算符: " + 运算符;
        返回 0;
    }
}

# 显示计算器欢迎信息
函数 显示欢迎信息() {
    输出 "===============================";
    输出 "   欢迎使用坤舆计算器 v" + 版本号;
    输出 "===============================";
    输出 "支持的运算：+, -, *, /, %";
    输出 "";
}

# 主程序
显示欢迎信息();

# 测试几个计算例子
变量 测试例子 = 创建列表();
列表添加(测试例子, [10, "+", 5]);
列表添加(测试例子, [20, "-", 7]);
列表添加(测试例子, [6, "*", 8]);
列表添加(测试例子, [100, "/", 4]);
列表添加(测试例子, [10, "%", 3]);
列表添加(测试例子, [5, "/", 0]);  # 错误情况测试

# 遍历并计算
变量 i = 0;
循环 (i < 列表长度(测试例子)) {
    变量 例子 = 列表获取(测试例子, i);
    变量 a = 列表获取(例子, 0);
    变量 运算符 = 列表获取(例子, 1);
    变量 b = 列表获取(例子, 2);
    
    变量 结果 = 计算(a, 运算符, b);
    输出 a + " " + 运算符 + " " + b + " = " + 结果;
    
    i = i + 1;
}

输出 "";
输出 "计算器演示结束"; 